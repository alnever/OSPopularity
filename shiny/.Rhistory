shiny::runApp()
runApp()
max(levels(osusers$Date))
max(levels(osusers$Date))+10
runApp()
d <- as.POSIXlt(levels(osusers$Date))
d <- gsub("^[0-9]*2\-",levels(ousers$Date))
d <- gsub("^[0-9]*2-",levels(ousers$Date))
d <- gsub("^[0-9]*2-","",levels(ousers$Date))
d <- gsub("^[0-9]*2-","",levels(osusers$Date))
d <- gsub("-[0-9][0-9]","",levels(osusers$Date))
d <- as.numeric(d)
runApp()
years <- gsub("-[0-9][0-9]","",levels(osusers$Date))
years <- as.numeric(years)
month <- gsub("[0-9][0-9][0-9][0-9]-","",levels(osusers$Date))
month <- as.numeric(month)
dates <- cbind(years, month)
year <- gsub("-[0-9][0-9]","",levels(osusers$Date))
year <- as.numeric(year)
month <- gsub("[0-9][0-9][0-9][0-9]-","",levels(osusers$Date))
month <- as.numeric(month)
dates <- cbind(year, month)
runApp()
class(dates)
dates <- as.data.frame(cbind(year, month))
runApp()
runApp()
runApp()
runApp()
osu <- osusers
osu$Date <- as.character(osu$Date)
minDate <- paste(input$minYear,'-',input$minMonth, sep = "")
minDate <- osu[1,"Date"]
maxDate <- osu[nrow(osu),"Date"]
rCharts::mPlot(Date, data = subset(osu, Date >= minDate & Date <= maxDate))
subset(osu, Date >= minDate & Date <= maxDate) -> d
rCharts::mPlot(osu$Date, data = subset(osu, Date >= minDate & Date <= maxDate))
rCharts::mPlot(x = "Date", y = names(osu)[-1], data = subset(osu, Date >= minDate & Date <= maxDate))
popOs <- rCharts::mPlot(x = "Date", y = names(osu)[-1], data = subset(osu, Date >= minDate & Date <= maxDate))
popOs
plot(popOs)
print(popOs)
popOs <- rCharts::mPlot(x = "Date", y = names(osu)[-1], data = subset(osu, Date >= minDate & Date <= maxDate), type = "line")
popOs
popOs <- rCharts::mPlot(x = "Date", y = names(osu)[-1], data = osu, type = "line")
popOs
runApp()
mPlot(x = "Date", y = names(osu)[-1], data = osu, type = "line")
mPlot(x = "Date", y = c("Android","Win7"), data = osu, type = "line")
mPlot(x = "Date", y = c("Android","Win7"), data = osu, type = "line") -> m1
m1
m1$print()
m1$print("chart2")
plot(m1)
m1
osu <- osusers
osu$DateC <- as.character(osu$Date)
popOs <- rCharts::mPlot(x = "Date", y = names(osu)[-1], data = osu, type = "line")
popOs
popOs <- mPlot(x = "Date", y = names(osu)[-1], data = osu, type = "line")
popOs
runApp()
runApp()
runApp()
runApp()
runApp()
minDate <- paste(input$minYear,'-',input$minMonth, sep = "")
maxDate <- paste(input$maxYear,'-',input$maxMonth, sep = "")
runApp()
library(osdata)
runApp()
runApp()
runApp()
runApp()
data(osusers)
year <- gsub("-[0-9][0-9]","",levels(osusers$Date))
year <- as.numeric(year)
month <- gsub("[0-9][0-9][0-9][0-9]-","",levels(osusers$Date))
month <- as.numeric(month)
dates <- as.data.frame(cbind(year, month))
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
osu <- subset(osusers, as.character(osusers$Date) >= minDate & as.character(osusers$Date) <= maxDate)
names(osusers)
runApp()
runApp()
runApp()
runApp()
runApp()
osu <- subset(osusers, as.character(osusers$Date) >= minDate & as.character(osusers$Date) <= maxDate)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
osu <- osusers[nrow(osu),]
osu <- osusers
last_data <- osu[nrow(),]
last_data <- osu[nrow(osu),]
m <- metl(last_data)
m <- melt(last_data)
last_data <- osu[nrow(),]
last_data <- osu[nrow(osu),]
m <- melt(last_data[-1])
head(m)
m <- m[order(value),]
m <- m[order(m$value),]
head(m)
m <- m[order(-m$value),]
head(m)
m <- m[1:10,]
m
nnames <- m$variable
mnames <- m$variable
mnames
mnames <- as.character(m$variable)
mnames
t <- osu[,c("Date",mnames)]
names(t)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
index
# Chunk 1
summary(cars)
# Chunk 2
plot(cars)
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data(osmap)
heda
head
head(osmap)
runApp()
opt_list = list(height = 600, width = 800)
gvisGeoMap(data = osmap, locationvar = "Continent",
numvar = mapOS(),
hovervar = mapOS(),
options = opt_list)
gvisGeoMap(data = osmap, locationvar = "Continent",
numvar = "Android",
hovervar = "Android",
options = opt_list)
G <- gvisGeoMap(data = osmap, locationvar = "Continent",
numvar = "Android",
hovervar = "Android",
options = opt_list)
plot(g)
plot(G)
class(osmap$Android)
class(osmap$Continent)
runApp()
osm <- osmap
osm$Continent <- as.character(osm$Continent)
head(osm)
G <- gvisGeoMap(data = osm, locationvar = "Continent",
numvar = "Android",
hovervar = "Android",
options = opt_list)
plot(G)
Geo=gvisGeoChart(Exports, locationvar="Country",
colorvar="Profit",
options=list(projection="kavrayskiy-vii"))
plot(Geo)
head(Exports)
e <- Exports
e[3,1] <- "United States of America"
e$Country <- as.character(e$Country)
Geo=gvisGeoChart(e, locationvar="Country",
colorvar="Profit",
options=list(projection="kavrayskiy-vii"))
plot(Geo)
class(e$Country)
e[3,1] <- "United States of America"
Geo=gvisGeoChart(e, locationvar="Country",
colorvar="Profit",
options=list(projection="kavrayskiy-vii"))
plot(Geo)
runApp()
runApp()
runApp()
G <- gvisGeoChart(data = osm, locationvar = "Continent",
colorvar = names(osm)[-1],
hovervar = "",
options = opt_list)
plot(G)
osm <- osmap[,-1]
head(osm)
which(max(osm[1,]))
which(osm[1,] == max(osm[1,]))
which(osm[2,] == max(osm[2,]))
maxim <- apply(osm,1, function(x) {names(osm)[which(x == max(x))]})
maxim
length(maxim)
nrow(osm)
maxim <- sapply(osm,1, function(x) {names(osm)[which(x == max(x))]})
maxim <- sapply(osm,1, function(x) {names(osm)[which(x == max(x))][1]})
maxim <- sapply(osm,1, function(x) {names(osm)[which(x == max(x))][[1]]})
maxim <- sapply(osm,1, function(x) {t <-names(osm)[which(x == max(x))]; t[1]})
maxim <- sapply(osm,1, function(x) {names(osm)[which(x == max(x))]})
maxim <- apply(osm,1, function(x) {t <-names(osm)[which(x == max(x))]; t[1]})
maxim
oscountry <- as.character(osmap$Continent)
maxim <- apply(osm,1, function(x) {t <-names(osm)[which(x == max(x))]; t[1]})
osmax <- cbind(oscountty,maxim)
osmax <- cbind(oscountry,maxim)
names(osmax) <- c("Country","Operating.System")
G <- gvisGeoChart(data = osmax, locationvar = "Country",
colorvar = "Operating.System",
hovervar = "",
options = opt_list)
plot(G)
G <- gvisGeoMap(data = osmax, locationvar = "Country",
colorvar = "Operating.System",
hovervar = "Operating.System",
options = opt_list)
plot(G)
osmax
oscountry <- as.character(osmap$Continent)
length(oscountry)
maxim <- apply(osm,1, function(x) {t <-names(osm)[which(x == max(x))]; t[1]})
length(maxim)
class(maxim)
osmax <- as.data.frame(cbind(oscountry,maxim))
class(osmax)
head(osmax)
names(osmax) <- c("Country","Operating.System")
head(osmax)
G <- gvisGeoChart(data = osmax, locationvar = "Country",
colorvar = "Operating.System",
hovervar = "Operating.System",
options = opt_list)
plot(G)
head(osmax)
osmax$OS <- as.factor(osmax$Operating.System)
names(osmax) <- c("Country","Operating.System","OS")
G <- gvisGeoChart(data = osmax, locationvar = "Country",
colorvar = "OS",
hovervar = "Operating.System",
options = opt_list)
plot(G)
levels(osmax$OS)
G <- gvisGeoChart(data = osmax, locationvar = "Country",
colorvar = "OS",
hovervar = "Operating.System",
options = list(height = 600, width = 800,
vAxes="[{title:levels(osmax$OS)[1]},{title:levels(osmax$OS)[length(levels(osmax$OS))]}]"
))
plot(G)
G <- gvisGeoChart(data = osmax, locationvar = "Country",
colorvar = "OS",
hovervar = "Operating.System",
options = list(height = 600, width = 800,
colors="['#0000ff','#00ff00']"
# vAxes="[{title:levels(osmax$OS)[1]},{title:levels(osmax$OS)[length(levels(osmax$OS))]}]"
))
plot(G)
G <- gvisGeoChart(data = osmax, locationvar = "Country",
colorvar = "OS",
hovervar = "Operating.System",
options = list(height = 600, width = 800,
colors="['#ff0000','#00ff00']"
# vAxes="[{title:levels(osmax$OS)[1]},{title:levels(osmax$OS)[length(levels(osmax$OS))]}]"
))
plot(G)
vAxesParams <- paste("[{title:",levels(osmax$OS)[1],"},{title:",levels(osmax$OS)[length(levels(osmax$OS))],"}]",sep="")
vAxesParams
vAxesParams <- paste("[{title:'",levels(osmax$OS)[1],"'},{title:'",levels(osmax$OS)[length(levels(osmax$OS))],"'}]",sep="")
vAxesParams
G <- gvisGeoChart(data = osmax, locationvar = "Country",
colorvar = "OS",
hovervar = "Operating.System",
options = list(height = 600, width = 800,
colors="['#ff0000','#00ff00']",
vAxes=vAxesParams
))
plot(G)
runApp()
runApp()
runApp()
runApp()
rm(list = ls())
data("osmap")
oscountry <- as.character(osmap$Continent)
osm <- as.matrix(osmap[,-1])
maxim <- apply(osm,1, function(x) {t <-names(osm)[which(x == max(x))]; t[1]})
osmax <- as.data.frame(cbind(oscountry,maxim))
osmax$OS <- as.factor(osmax$Operating.System)
runApp()
rm(list = ls())
oscountry <- as.character(osmap$Continent)
osm <- as.matrix(osmap[,-1])
maxim <- apply(osm,1, function(x) {t <-names(osm)[which(x == max(x))]; t[1]})
osmax <- as.data.frame(cbind(oscountry,maxim))
names(osmax) <- c("Country","Operating.System")
names(osmax)
oscountry <- as.character(osmap$Continent)
osm <- as.matrix(osmap[,-1])
maxim <- apply(osm,1, function(x) {t <-names(osm)[which(x == max(x))]; t[1]})
osmax <- as.data.frame(cbind(oscountry,maxim))
head(osmax)
maxim
head(osm)
maxim <- apply(osm,1, function(x) {t <-names(osm)[which(x == max(x))]; t[1]})
maxim
class(osm)
m <- apply(osm,1, function(x) {t <-names(osm)[which(x == max(x))]; t[1]})
m
m <- apply(osm,1, function(x) {names(osm)[which(x == max(x))]})
m
names(osm)
oscountry <- as.character(osmap$Continent)
osm <- osmap[,-1]
maxim <- apply(osm,1, function(x) {t <-names(osm)[which(x == max(x))]; t[1]})
maxim
osmax <- as.data.frame(cbind(oscountry,maxim))
names(osmax) <- c("Country","Operating.System")
osmax$OS <- as.factor(osmax$Operating.System)
vAxesParams <- paste("[{title:'",levels(osmax$OS)[1],"'},{title:'",levels(osmax$OS)[length(levels(osmax$OS))],"'}]",sep="")
runApp()
G <- gvisGeoChart(data = osmax, locationvar = "Country",
colorvar = "OS",
hovervar = "Operating.System",
options = gvisGeoChart(data = osmax, locationvar = "Country",
colorvar = "OS",
hovervar = "Operating.System",
options = list(height = 600, width = 800,
colors="['#ff0000','#00ff00']",
vAxes=vAxesParams,
backgroundColor="lightblue"
))
)
plot(G)
G <- gvisGeoChart(data = osmax, locationvar = "Country",
colorvar = "OS",
hovervar = "Operating.System",
options = gvisGeoChart(data = osmax, locationvar = "Country",
colorvar = "OS",
hovervar = "Operating.System",
options = list(height = 600, width = 800,
colors="['#ff0000','#00ff00']"
))
)
plot(G)
G <- gvisGeoChart(data = osmax, locationvar = "Country",
colorvar = "OS",
hovervar = "Operating.System",
options = list(height = 600, width = 800,
colors="['#ff0000','#00ff00']",
vAxes=vAxesParams,
backgroundColor="lightblue"
))
plot(G)
runApp()
library(devtools)
install_github("osdata","alnever")
